{"version":3,"sources":["components/Note.js","components/AddNote.js","components/NotesList.js","components/Search.js","components/Header.js","App.js","index.js"],"names":["Note","_ref","id","text","date","handleDeleteNote","react_default","a","createElement","className","index_esm","size","onClick","AddNote","handleAddNote","_useState","useState","_useState2","Object","slicedToArray","noteText","setNoteText","rows","cols","placeholder","value","onChange","event","target","length","trim","setTimeout","NotesList","notes","map","note","components_Note","components_AddNote","Search","handleSearchNote","type","Header","handleToggleDarkMode","previousDarkMode","App","nanoid","setNotes","_useState3","_useState4","searchText","setSearchText","_useState5","_useState6","darkMode","setDarkMode","useEffect","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","concat","components_Header","components_Search","components_NotesList","filter","toLowerCase","includes","Date","newNote","toLocaleDateString","newNotes","toConsumableArray","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.175e5118.chunk.js","sourcesContent":["import React from 'react';\nimport { MdDeleteForever } from 'react-icons/md';\n\nconst Note = ({id, text, date, handleDeleteNote}) => {\n    return (\n        <div className=\"note\">\n            <spam>{text}</spam>\n            <div className = \"note-footer\">\n                <small>{date}</small>\n                <MdDeleteForever className = \"delete-icon\" size = \"1.3cm\" \n                onClick={() => handleDeleteNote(id)}/>              \n            </div>\n        </div>\n    );\n};\n\nexport default Note;","import React, { useState } from \"react\";\n\nconst AddNote = ({handleAddNote}) => {\n    const [noteText, setNoteText] = useState('');\n\n    const characterLimit = 200;\n\n    const handleChange = (event) =>{\n        if(characterLimit - event.target.value.length >=0){\n            setNoteText(event.target.value);\n    \n        }\n    };\n\n    const handleSaveClick = ()=>{\n        if (noteText.trim().length >0){\n            handleAddNote(noteText);\n            setTimeout(() => handleAddNote(noteText), 5000);            \n            setNoteText('');\n        }\n    };\n\n    return(\n        <div className=\"note new\">\n            <textarea \n                rows = \"8\" \n                cols = \"10\"\n                placeholder=\"Add a note...\"\n                value = {noteText}\n                onChange ={handleChange}>\n            </textarea>\n            <div className=\"note-footer\">\n                <small>{characterLimit - noteText.length} Remaining</small>\n                <button className=\"save\" onClick={handleSaveClick}> Save</button>\n            </div>\n        </div>\n    );\n};\n\nexport default AddNote;","import Note from'./Note';\nimport AddNote from './AddNote';\nimport React from 'react';\n\n\nconst NotesList = ({ notes , handleAddNote , handleDeleteNote }) => {\n    return (\n        <div className = \"notes-list\">\n            {notes.map((note)=> (\n            <Note \n                id = {note.id} \n                text={note.text} \n                date= {note.date}\n                handleDeleteNote={handleDeleteNote} />\n            ))}\n            <AddNote handleAddNote = {handleAddNote}/>\n        </div>\n    );\n};\n\nexport default NotesList;\n\n//parse data through bunch of different components - props drilling, \n// with too many components using context api makes it better\n","import React from \"react\";\nimport { MdSearch } from 'react-icons/md';\n\n\nconst Search =({handleSearchNote})=> {\n    return <div className=\"search\">\n        <MdSearch className=\"search-icons\" size = \"1.3cm\" />\n        <input \n            onChange= {(event) => handleSearchNote(event.target.value)\n            }\n            type=\"text\" \n            placeholder=\"type to search...\"></input>\n    </div>;\n};\n\nexport default Search;\n\n\n// capture user input value, filter notes on the basis of it","import React from \"react\";\n\nconst Header= ({handleToggleDarkMode}) =>{\n    return(\n        <div className=\"header\">\n            <h1>My Notes</h1>\n            <button \n                onClick = {()=> \n                    handleToggleDarkMode(\n                        (previousDarkMode)=> !previousDarkMode\n                        )\n                    }\n                className=\"save\">Toggle Mode</button>\n        </div>\n    );\n};\n\nexport default Header;","import NotesList from \"./components/NotesList\";\nimport { nanoid } from 'nanoid';\nimport React, { useState, useEffect } from \"react\";\nimport { MdDraw } from \"react-icons/md\";\nimport Search from \"./components/Search\";\nimport Header from \"./components/Header\";\n\nconst App = () => {\n  // usestate hook to hold array of notes\n  const[notes, setNotes] = useState([\n    {\n    id: nanoid(),\n    text: \"This is trial note!\",\n    date: \"21/04/2022\",\n    },\n\n    {\n      id: nanoid(),\n      text: \"This is second note!\",\n      date: \"23/10/2022\",\n      },\n\n      {\n        id: nanoid(),\n        text: \"This is third note!\",\n        date: \"06/12/2022\",\n        },\n  ]);\n\n  const [searchText, setSearchText] = useState('');\n\n  const [darkMode, setDarkMode] = useState(false);\n\n  useEffect(() => {\n      const savedNotes = JSON.parse(\n        localStorage.getItem(\n          'react-notes-app-data'));\n\n      if (savedNotes) {\n        setNotes(savedNotes);\n      }\n  }, []);\n\n  useEffect(()=> {\n      localStorage.setItem(\n        'react-notes-app-data', \n        JSON.stringify(notes)\n      );\n  }, [notes]);\n\n  const addNote = (text) =>{\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString(),\n    };\n    // Array of all other notes and will add new note to the end of it.\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  };\n\n  const deleteNote = (id) => {\n    const newNotes = notes.filter((note)=> note.id !==id);\n    setNotes(newNotes);\n\n  }\n\n  return (\n    <div className={`${darkMode && 'dark-mode'}`}>\n      <div className=\"container\">\n      <Header handleToggleDarkMode = {setDarkMode}/>\n      <Search handleSearchNote = {setSearchText}/>\n      <NotesList \n        notes={notes.filter((note)=> note.text.toLowerCase().includes(searchText.toLowerCase()))} \n        handleAddNote={addNote}\n        handleDeleteNote = {deleteNote}/>\n      </div>\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}